"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeFormDate = void 0;
var form_data_1 = __importDefault(require("form-data"));
var makeFormDate = function (data) {
    var form = new form_data_1.default();
    if (!data && typeof data !== 'object') {
        return form;
    }
    var formData;
    if (data instanceof Array) {
        formData = data;
    }
    else {
        formData = [];
        for (var field in data) {
            formData.push({
                field: field,
                value: data[field],
            });
        }
    }
    for (var _i = 0, formData_1 = formData; _i < formData_1.length; _i++) {
        var item = formData_1[_i];
        var field = item.field;
        var file = item.file, value = item.value;
        if (value) {
            var valueMatch = value.match(/^data:image\/[a-z]+;base64,(.+)$/);
            if (valueMatch) {
                file = {
                    buffer: Buffer.from(valueMatch[1], 'base64'),
                    filename: Date.now().toString(),
                };
                value = undefined;
            }
        }
        if (value) {
            form.append(field, value);
        }
        else if (file && file.buffer && file.filename) {
            form.append(field, file.buffer, {
                filename: [
                    // NOTE: I am not sure if it is needed to make the filename unique
                    Math.random().toString(36).substr(2),
                    file.filename,
                ].join('-'),
            });
        }
    }
    return form;
};
exports.makeFormDate = makeFormDate;
